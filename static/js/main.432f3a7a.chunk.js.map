{"version":3,"sources":["firebase.js","Components/Header.js","features/appSlice.js","Components/SideBarOption.js","Components/SideBar.js","Components/Message.js","Components/ChatInput.js","Components/Chat.js","Components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderContainer","HeaderLeft","HeaderAvatar","alt","displayName","src","photoURL","onClick","signOut","HeaderSearch","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","SideBarOption","Icon","title","addChannelOPtion","id","dispatch","toggleChannel","useDispatch","SideBarOptionContainer","channelName","prompt","collection","add","fontSize","style","padding","SideBarOptionChannel","h3","SideBar","useCollection","channels","useState","closed","setClosed","SideBarContainer","SideBarHeader","SideBarInfo","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","AddIcon","ExpandMoreIcon","docs","map","doc","data","Message","message","timeStamp","userImage","console","log","MessageContainer","MessageInfo","Date","toDate","toUTCString","ChatInput","channelId","chatRef","input","setInput","ChatInputContainer","value","onChange","e","target","Button","hidden","type","preventDefault","FieldValue","serverTimestamp","current","scrollIntoView","behavior","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","useEffect","ChatContainer","ChatMessage","ChatBottom","ref","Login","LoginContainer","LoginInnerContainer","signInWithPopup","catch","error","alert","App","AppLoadingContainer","AppLoadingContents","color","className","AppBody","path","exact","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.432f3a7a.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/firestore\"; // for cloud firestore\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDYlGLgoXkEy76N69ut8i6molOH3_c-JMI\",\r\n  authDomain: \"slack-clone-58c27.firebaseapp.com\",\r\n  projectId: \"slack-clone-58c27\",\r\n  storageBucket: \"slack-clone-58c27.appspot.com\",\r\n  messagingSenderId: \"885291610862\",\r\n  appId: \"1:885291610862:web:f9d3ab9ed5ecf19ded39ff\",\r\n  measurementId: \"G-GWR4HVR4RL\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth } from \"../firebase\";\r\n\r\nfunction Header() {\r\n  const [user] = useAuthState(auth);\r\n  return (\r\n    <HeaderContainer>\r\n      <HeaderLeft>\r\n        <HeaderAvatar\r\n          alt={user?.displayName}\r\n          src={user?.photoURL}\r\n          onClick={() => auth.signOut()}\r\n        />\r\n\r\n        <AccessTimeIcon />\r\n      </HeaderLeft>\r\n      <HeaderSearch>\r\n        <SearchIcon />\r\n        <input placeholder=\"Search\" />\r\n      </HeaderSearch>\r\n      <HeaderRight>\r\n        <HelpOutlineIcon />\r\n      </HeaderRight>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  width: 100%;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px 0;\r\n  background-color: var(--slack-color);\r\n`;\r\nconst HeaderLeft = styled.div`\r\n  flex: 0.3;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 20px;\r\n\r\n  > .MuiSvgIcon-root {\r\n    margin-left: auto;\r\n    margin-right: 30px;\r\n    color: #ffff;\r\n  }\r\n`;\r\nconst HeaderAvatar = styled(Avatar)`\r\n  cursor: pointer;\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst HeaderSearch = styled.div`\r\n  flex: 0.4;\r\n  opacity: 1;\r\n  border-radius: 6px;\r\n  background-color: #421f44;\r\n  text-align: center;\r\n  display: flex;\r\n  padding: 0 50px;\r\n  color: gray;\r\n  border: 1px gray solid;\r\n\r\n  > input {\r\n    background-color: transparent;\r\n    border: none;\r\n    text-align: center;\r\n    min-width: 30vw;\r\n    outline: 0;\r\n    color: #ffff;\r\n  }\r\n  > .MuiSvgIcon-root {\r\n    color: #ffff;\r\n  }\r\n`;\r\nconst HeaderRight = styled.div`\r\n  flex: 0.3;\r\n  display: flex;\r\n  align-items: flex-end;\r\n\r\n  > .MuiSvgIcon-root {\r\n    color: #ffff;\r\n    margin-left: auto;\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState: {\r\n    roomId: \"\",\r\n  },\r\n  reducers: {\r\n    enterRoom: (state, action) => {\r\n      state.roomId = action.payload.roomId;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { enterRoom } = appSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectRoomId = (state) => state.app.roomId;\r\n\r\nexport default appSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport db from \"../firebase\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { enterRoom } from \"../features/appSlice\";\r\n\r\nfunction SideBarOption({ Icon, title, addChannelOPtion, id, toggleChannel }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const addChannel = () => {\r\n    const channelName = prompt(\"please enter the channel\");\r\n    if (channelName) {\r\n      db.collection(\"rooms\").add({\r\n        name: channelName,\r\n      });\r\n    }\r\n  };\r\n  const selectChannel = () => {\r\n    if (id) {\r\n      dispatch(\r\n        enterRoom({\r\n          roomId: id,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SideBarOptionContainer\r\n      onClick={addChannelOPtion ? addChannel : selectChannel}\r\n    >\r\n      {Icon && <Icon fontSize=\"small\" style={{ padding: 10 }} />}\r\n\r\n      {Icon ? (\r\n        <h3>{title}</h3>\r\n      ) : (\r\n        <SideBarOptionChannel>\r\n          <span>#</span>\r\n          {title}\r\n        </SideBarOptionChannel>\r\n      )}\r\n    </SideBarOptionContainer>\r\n  );\r\n}\r\n\r\nexport default SideBarOption;\r\n\r\nconst SideBarOptionContainer = styled.div`\r\n  display: flex;\r\n  font-size: 12px;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    opacity: 0.9;\r\n    background-color: #340c36;\r\n  }\r\n  > h3 {\r\n    font-weight: 500;\r\n  }\r\n  > h3 > span {\r\n    padding: 15px;\r\n  }\r\n`;\r\nconst SideBarOptionChannel = styled.h3`\r\n  padding: 10px, 0;\r\n  font-weight: 300;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport SideBarOption from \"./SideBarOption\";\r\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport db from \"../firebase\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth } from \"../firebase\";\r\n\r\nfunction SideBar() {\r\n  const [channels] = useCollection(db.collection(\"rooms\"));\r\n  const [user] = useAuthState(auth);\r\n  const [closed, setClosed] = useState(false);\r\n\r\n  return (\r\n    <SideBarContainer>\r\n      <SideBarHeader>\r\n        <SideBarInfo>\r\n          <h2>Urban Fish</h2>\r\n          <h3>\r\n            <FiberManualRecordIcon />\r\n            {user.displayName}\r\n          </h3>\r\n        </SideBarInfo>\r\n        <CreateIcon />\r\n      </SideBarHeader>\r\n      <SideBarOption Icon={InsertCommentIcon} title=\"Threads\" />\r\n      <SideBarOption Icon={InboxIcon} title=\"Mentions & reactions\" />\r\n      <SideBarOption Icon={DraftsIcon} title=\"Save Items\" />\r\n      <SideBarOption Icon={BookmarkBorderIcon} title=\"Channel browser\" />\r\n      <SideBarOption Icon={PeopleAltIcon} title=\"People & user Groups\" />\r\n      <SideBarOption Icon={AppsIcon} title=\"Apps\" />\r\n      <SideBarOption Icon={FileCopyIcon} title=\"File browser\" />\r\n      <SideBarOption Icon={ExpandLessIcon} title=\"Show less\" />\r\n      <hr />\r\n      <SideBarOption Icon={AddIcon} addChannelOPtion title=\"Add channels\" />\r\n      <SideBarOption\r\n        Icon={ExpandMoreIcon}\r\n        onClick={() => setClosed(!closed)}\r\n        title=\"Channels\"\r\n      />\r\n      {!closed &&\r\n        channels?.docs.map((doc) => (\r\n          <SideBarOption key={doc.id} id={doc.id} title={doc.data().name} />\r\n        ))}\r\n      <hr />\r\n    </SideBarContainer>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n\r\nconst SideBarContainer = styled.div`\r\n  flex: 0.3;\r\n  background-color: var(--slack-color);\r\n  color: #fff;\r\n  border-top: 1px solid #49274b;\r\n  max-width: 260px;\r\n  margin-top: 60px;\r\n\r\n  > hr {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid #49274b;\r\n  }\r\n`;\r\nconst SideBarHeader = styled.div`\r\n  display: flex;\r\n  padding-bottom: 1px solid #49274b;\r\n  padding: 13px;\r\n\r\n  > .MuiSvgIcon-root {\r\n    padding: 8px;\r\n    color: #49274b;\r\n    font-size: 18px;\r\n    background-color: #ffff;\r\n    border-radius: 999px;\r\n  }\r\n`;\r\nconst SideBarInfo = styled.div`\r\n  flex: 1;\r\n\r\n  > h2 {\r\n    font-size: 15px;\r\n    font-weight: 900;\r\n    margin-bottom: 5px;\r\n  }\r\n  > h3 {\r\n    display: flex;\r\n    font-size: 13px;\r\n    font-weight: 400;\r\n    align-items: center;\r\n  }\r\n  > h3 > .MuiSvgIcon-root {\r\n    font-size: 14px;\r\n    margin-top: 1px;\r\n    margin-right: 2px;\r\n    color: green;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Message({ message, timeStamp, user, userImage }) {\r\n  console.log(\"this is message\", user);\r\n  return (\r\n    <MessageContainer>\r\n      <img src={userImage} alt=\"\" />\r\n      <MessageInfo>\r\n        <h4>\r\n          {user}\r\n          {\"\"}\r\n        </h4>\r\n        <span>{new Date(timeStamp?.toDate()).toUTCString()}</span>\r\n        <p>{message} </p>\r\n      </MessageInfo>\r\n    </MessageContainer>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n\r\nconst MessageContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px;\r\n\r\n  > img {\r\n    height: 50px;\r\n    border-radius: 8px;\r\n  }\r\n`;\r\nconst MessageInfo = styled.div`\r\n  padding-left: 10px;\r\n\r\n  > h4 > span {\r\n    color: gray;\r\n    font-weight: 300;\r\n    margin-left: 4px;\r\n    font-size: 10px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport db from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth } from \"../firebase\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Picker from \"emoji-picker-react\";\r\n\r\nfunction ChatInput({ channelName, channelId, chatRef }) {\r\n  const [user] = useAuthState(auth);\r\n\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!channelId) {\r\n      return false;\r\n    }\r\n\r\n    db.collection(\"rooms\").doc(channelId).collection(\"messages\").add({\r\n      message: input,\r\n      timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      user: user.displayName,\r\n      userImage: user.photoURL,\r\n    });\r\n    chatRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <ChatInputContainer>\r\n      <form>\r\n        <input\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder={`Message # ${channelName}`}\r\n        />\r\n\r\n        <Button hidden type=\"submit\" onClick={sendMessage}>\r\n          Send\r\n        </Button>\r\n      </form>\r\n    </ChatInputContainer>\r\n  );\r\n}\r\n\r\nexport default ChatInput;\r\n\r\nconst ChatInputContainer = styled.div`\r\n  border-radius: 20px;\r\n\r\n  > form {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  > form > input {\r\n    position: fixed;\r\n    bottom: 30px;\r\n    width: 60%;\r\n    border: 1px solid gray;\r\n    border-radius: 3px;\r\n    padding: 20px;\r\n    outline: none;\r\n  }\r\n  > form > button {\r\n    display: none !important;\r\n  }\r\n`;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport Message from \"./Message\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport { selectRoomId } from \"../features/appSlice\";\r\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\r\nimport db from \"../firebase\";\r\n\r\nfunction Chat() {\r\n  const chatRef = useRef(null);\r\n  const roomId = useSelector(selectRoomId);\r\n\r\n  const [roomDetails] = useDocument(\r\n    roomId && db.collection(\"rooms\").doc(roomId)\r\n  );\r\n\r\n  const [roomMessages] = useCollection(\r\n    roomId &&\r\n      db\r\n        .collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timeStamp\", \"asc\")\r\n  );\r\n\r\n  useEffect(() => {\r\n    chatRef?.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [roomId]);\r\n\r\n  return (\r\n    <ChatContainer>\r\n      {roomDetails && roomMessages && (\r\n        <>\r\n          <Header>\r\n            <HeaderLeft>\r\n              <h4>\r\n                <strong># {roomDetails?.data().name}</strong>\r\n              </h4>\r\n              <StarBorderIcon />\r\n            </HeaderLeft>\r\n            <HeaderRight>\r\n              <p>\r\n                <InfoIcon />\r\n                Details\r\n              </p>\r\n            </HeaderRight>\r\n          </Header>\r\n\r\n          <ChatMessage>\r\n            {roomMessages?.docs.map((doc) => {\r\n              const { message, timeStamp, user, userImage } = doc.data();\r\n\r\n              return (\r\n                <Message\r\n                  key={doc.id}\r\n                  message={message}\r\n                  timeStamp={timeStamp}\r\n                  user={user}\r\n                  userImage={userImage}\r\n                />\r\n              );\r\n            })}\r\n          </ChatMessage>\r\n          <ChatBottom ref={chatRef} />\r\n\r\n          <ChatInput\r\n            chatRef={chatRef}\r\n            channelName={roomDetails?.data().name}\r\n            channelId={roomId}\r\n          />\r\n        </>\r\n      )}\r\n    </ChatContainer>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n\r\nconst ChatContainer = styled.div`\r\n  flex: 0.7;\r\n  flex-grow: 1;\r\n  overflow-y: scroll;\r\n  margin-top: 60px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n  border-bottom: 1px solid lightgrey;\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  > h4 {\r\n    display: flex;\r\n    text-transform: lowercase;\r\n    margin-right: 10px;\r\n  }\r\n  > h4 > .MuiSvgIcon-root {\r\n    margin-left: 20px;\r\n    font-size: 10px;\r\n  }\r\n`;\r\n\r\nconst HeaderRight = styled.div`\r\n  > p {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 14px;\r\n  }\r\n\r\n  > p > .MuiSvgIcon-root {\r\n    margin-right: 5px !important;\r\n    font-size: 16px;\r\n  }\r\n`;\r\nconst ChatBottom = styled.div`\r\n  padding-bottom: 200px;\r\n`;\r\nconst ChatMessage = styled.div`\r\n  padding-bottom: 200px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { auth, provider } from \"../firebase\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nfunction Login() {\r\n  const signIn = () => {\r\n    auth.signInWithPopup(provider).catch((error) => {\r\n      alert(error.message);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <LoginContainer>\r\n      <LoginInnerContainer>\r\n        <img\r\n          src=\"https://cdn.freebiesupply.com/logos/thumbs/2x/slack-logo-thumb.png\"\r\n          alt=\"slack\"\r\n        />\r\n        <h1>Sing In Slack</h1>\r\n        <p>Urban.slack</p>\r\n        <Button onClick={signIn}>Sign in with Google</Button>\r\n      </LoginInnerContainer>\r\n    </LoginContainer>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\nconst LoginContainer = styled.div`\r\n  background-color: #f8f8f8;\r\n  height: 100vh;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst LoginInnerContainer = styled.div`\r\n  padding: 100px;\r\n  text-align: center;\r\n  background-color: #ffff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n\r\n  > img {\r\n    object-fit: contain;\r\n    height: 100px;\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  > button {\r\n    margin-top: 50px;\r\n    text-transform: inherit !important;\r\n    background-color: #2eb67d !important;\r\n    color: #ffff;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./Components/Header\";\r\nimport SideBar from \"./Components/SideBar\";\r\nimport styled from \"styled-components\";\r\nimport Chat from \"./Components/Chat\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth } from \"./firebase\";\r\nimport Login from \"./Components/Login\";\r\nimport Spinner from \"react-spinkit\";\r\n\r\nfunction App() {\r\n  const [user, loading] = useAuthState(auth);\r\n\r\n  if (loading) {\r\n    return (\r\n      <AppLoadingContainer>\r\n        <AppLoadingContents>\r\n          <img\r\n            src=\"https://cdn.freebiesupply.com/logos/thumbs/2x/slack-logo-thumb.png\"\r\n            alt=\"slack\"\r\n          />\r\n          <Spinner name=\"ball-spin-fade-loader\" color=\"purple\" />\r\n        </AppLoadingContents>\r\n      </AppLoadingContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {!user ? (\r\n          <Login />\r\n        ) : (\r\n          <>\r\n            <Header />\r\n            <AppBody>\r\n              <SideBar />\r\n              <Switch>\r\n                <Route path=\"/\" exact>\r\n                  <Chat />\r\n                </Route>\r\n              </Switch>\r\n            </AppBody>\r\n          </>\r\n        )}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppBody = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n`;\r\n\r\nconst AppLoadingContainer = styled.div`\r\n  display: grid;\r\n  place-items: center;\r\n  height: 100vh;\r\n  width: 100%;\r\n`;\r\n\r\nconst AppLoadingContents = styled.div`\r\n  text-align: center;\r\n  padding-bottom: 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  > img {\r\n    height: 100px;\r\n    padding: 20px;\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport appReducer from \"../features/appSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}